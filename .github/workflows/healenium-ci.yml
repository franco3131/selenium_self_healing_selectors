name: Healenium demo

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: maven

      - name: Setup Chrome
        uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: stable

      - name: Start Healenium via docker-compose
        run: |
          docker compose up -d
          echo "Waiting for healenium-backend (7878) and selector-imitator (8000)..."
          for i in {1..60}; do
            (curl -sf http://127.0.0.1:7878/actuator/health | grep -q '"status":"UP"') && OK1=1 || OK1=0
            (curl -sf http://127.0.0.1:8000/health >/dev/null 2>&1) && OK2=1 || OK2=0
            if [ $OK1 -eq 1 ] && [ $OK2 -eq 1 ]; then echo "Healenium is up"; break; fi
            sleep 5
          done
          docker ps

      - name: Run baseline (seed selectors)
        env:
          SELENIUM_HEADLESS: "true"
        run: |
          mvn -B -Dtest="*RunnerTest*" -Dcucumber.filter.tags="@baseline" test

      - name: Run healing scenario (mutate DOM; expect heal)
        env:
          SELENIUM_HEADLESS: "true"
        run: |
          mvn -B -Dtest="*RunnerTest*" -Dcucumber.filter.tags="@healing" test

      - name: Collect docker logs (+ backend last 300 lines)
        if: always()
        run: |
          mkdir -p artifacts/docker-logs
          docker compose logs > artifacts/docker-logs/compose.log || true
          docker compose ps   > artifacts/docker-logs/ps.txt || true
          echo "=== Backend: last 300 lines with healing keywords ==="
          docker compose logs --tail=300 healenium-backend | tee artifacts/docker-logs/backend.log | egrep -i "Save Elements|Healing|selector|WARN|ERROR" || true
          echo "=== Full backend log saved to artifacts/docker-logs/backend.log ==="

      - name: DB snapshot â€“ counts
        if: always()
        run: |
          docker compose exec -T postgres bash -lc 'psql -U healenium -d healenium -c "SELECT COUNT(*) AS selector_rows FROM selector;"'
          docker compose exec -T postgres bash -lc 'psql -U healenium -d healenium -c "SELECT COUNT(*) AS healing_rows FROM healing;"'
          docker compose exec -T postgres bash -lc 'psql -U healenium -d healenium -c "SELECT COUNT(*) AS healing_result_rows FROM healing_result;"'

      - name: Show last selectors
        if: always()
        run: |
          docker compose exec -T postgres bash -lc 'psql -U healenium -d healenium -c "SELECT uid, class_name, method_name, LEFT(locator,120) AS locator, LEFT(url,120) AS url, create_date FROM selector ORDER BY create_date DESC LIMIT 15;"'

      - name: What healed (summary join)
        if: always()
        run: |
          docker compose exec -T postgres bash -lc 'psql -U healenium -d healenium -c "
            SELECT
              hr.id AS heal_result_id,
              to_char(hr.create_date, '\''YYYY-MM-DD HH24:MI:SS'\'') AS created_at,
              hr.score,
              hr.success_healing,
              s.class_name || '\''#'\'' || s.method_name AS where_found,
              s.url,
              s.locator AS old_locator
            FROM healing_result hr
            JOIN healing  h ON h.uid = hr.healing_id
            JOIN selector s ON s.uid = h.selector_id
            ORDER BY hr.create_date DESC
            LIMIT 20;
          "'

      - name: List screenshots (debug)
        if: always()
        run: |
          echo "PWD=$(pwd)"
          ls -la target || true
          ls -la target/screenshots || true

      - name: Upload screenshots (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: screenshots
          path: target/screenshots/**
          if-no-files-found: warn

      - name: Upload test reports and Healenium report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: reports-and-healenium
          path: |
            target/surefire-reports/**
            target/cucumber-reports/**
            target/healenium-report/**
            artifacts/docker-logs/**
