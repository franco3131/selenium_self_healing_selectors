name: Healenium demo

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: maven
          
      - name: Setup Chrome
        uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: stable  

      - name: Start Healenium via docker-compose
        run: |
          docker compose up -d
          echo "Waiting for healenium-backend (7878) and selector-imitator (8000)..."
          for i in {1..60}; do
            (curl -sf http://127.0.0.1:7878/actuator/health | grep -q '"status":"UP"') && OK1=1 || OK1=0
            (curl -sf http://127.0.0.1:8000/health >/dev/null 2>&1) && OK2=1 || OK2=0
            if [ $OK1 -eq 1 ] && [ $OK2 -eq 1 ]; then echo "Healenium is up"; break; fi
            sleep 5
          done
          docker ps

      - name: Run baseline (seed selectors)
        env:
          # Headless Chrome for CI
          SELENIUM_HEADLESS: "true"
        run: |
          mvn -B -Dtest=*RunnerTest* -Dcucumber.filter.tags="@baseline" test

      - name: Run healing scenario (mutate DOM; expect heal)
        env:
          SELENIUM_HEADLESS: "true"
        run: |
          mvn -B -Dtest=*RunnerTest* -Dcucumber.filter.tags="@healing" test

      - name: Collect docker logs
        if: always()
        run: |
          mkdir -p artifacts/docker-logs
          docker compose logs > artifacts/docker-logs/compose.log || true
          docker compose ps   > artifacts/docker-logs/ps.txt || true
          
      - name: Show Healenium selectors (psql)
        if: always()
        run: |
          docker compose exec -T postgres \
            psql -U healenium -d healenium \
            -c "SELECT uid, class_name, method_name, locator, url, create_date
                FROM selector ORDER BY create_date DESC LIMIT 15;"

      - name: Dump Healenium healed selectors (psql)
        if: always()
        run: |
          docker compose exec -T postgres \
            psql -U healenium -d healenium \
            -c "SELECT uid, old_locator, new_locator, score, create_date
                FROM healing_result ORDER BY create_date DESC LIMIT 15;" \
            > artifacts/docker-logs/healing-result.txt || true


      - name: List screenshots (debug)
        if: always()
        run: |
          echo "PWD=$(pwd)"
          ls -la target || true
          ls -la target/screenshots || true
      
      - name: Upload screenshots (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: screenshots
          path: target/screenshots/**
          if-no-files-found: warn

      - name: Dump healing_result rows (generic)
        if: always()
        run: |
            SELECT
            hr.id,
            hr.create_date,
            hr.score,
            hr.success_healing,
            s.locator        AS old_locator,
            COALESCE(h.new_locator, h.healed_locator, h.locator_to, h.target_locator) AS new_locator
            FROM healing_result hr
            LEFT JOIN selector s
              ON s.uid = hr.locator                      -- some builds use UID
            LEFT JOIN healing h
              ON h.id = hr.healing_id
            ORDER BY hr.create_date DESC
            LIMIT 20;

      - name: Dump healing_result rows (generic)2
        if: always()
        run: |
            SELECT
            hr.id, hr.create_date, hr.score, hr.success_healing,
            s.locator AS old_locator,
            COALESCE(h.new_locator, h.healed_locator, h.locator_to, h.target_locator) AS new_locator
            FROM healing_result hr
            LEFT JOIN selector s ON s.id = hr.locator
            LEFT JOIN healing h  ON h.id = hr.healing_id
            ORDER BY hr.create_date DESC
            LIMIT 20;

      - name: Dump healing_result rows (generic)3
        if: always()
        run: |
            SELECT
            hr.id, hr.create_date, hr.score, hr.success_healing,
            s.locator AS old_locator,
            COALESCE(h.new_locator, h.healed_locator, h.locator_to, h.target_locator) AS new_locator
            FROM healing_result hr
            LEFT JOIN selector s          ON (s.uid = hr.locator OR s.id = hr.locator)
            LEFT JOIN healing_details h   ON h.id = hr.healing_id
            ORDER BY hr.create_date DESC
            LIMIT 20;

      - name: Upload test reports and Healenium report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: reports-and-healenium
          path: |
            target/surefire-reports/**
            target/cucumber-reports/**
            target/healenium-report/** 
            artifacts/docker-logs/**
